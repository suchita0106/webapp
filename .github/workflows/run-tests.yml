# This is a basic workflow to help you get started with Actions

name: Run tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  # branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  run_tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4.4.0
        with:
          java-version: 21
          distribution: temurin

      - name: Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo service mysql start

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to start..."
          for i in {1..30}; do
            if mysqladmin ping --silent; then
              echo "MySQL is up and running!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run Unit Tests
        run: |
          mvn test -Dspring.datasource.url=${{ secrets.DB_URL }} \
                   -Dspring.datasource.username=${{ secrets.DB_USERNAME }} \
                   -Dspring.datasource.password=${{ secrets.DB_PASSWORD }} \
                   -Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver \
                   -Dspring.jpa.hibernate.ddl-auto=update \
                   -Dspring.datasource.hikari.connection-timeout=1000 \
                   -Dserver.port=8080 \
                   -Daws.region=${{ secrets.AWS_REGION }} \
                   -Daws.s3.bucket=${{ secrets.AWS_S3_BUCKET }} \
                   -Dsns.topic.arn=${{ secrets.TOPIC_ARN }}